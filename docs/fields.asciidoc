
////
This file is generated! See _meta/fields.yml and scripts/generate_field_docs.py
////

[[exported-fields]]
= Exported Fields

[partintro]

--
This document describes the fields that are exported by Jmxproxybeat. They are
grouped in the following categories:

* <<exported-fields-beat>>
* <<exported-fields-cloud>>
* <<exported-fields-jmxproxybeat>>

--
[[exported-fields-beat]]
== Beat Fields

Contains common beat fields available in all event types.



[float]
=== beat.name

The name of the Beat sending the log messages. If the Beat name is set in the configuration file, then that value is used. If it is not set, the hostname is used. To set the Beat name, use the `name` option in the configuration file.


[float]
=== beat.hostname

The hostname as returned by the operating system on which the Beat is running.


[float]
=== beat.version

The version of the beat that generated this event.


[float]
=== @timestamp

type: date

example: August 26th 2016, 12:35:53.332

format: date

required: True

The timestamp when the event log record was generated.


[float]
=== tags

Arbitrary tags that can be set per Beat and per transaction type.


[float]
=== fields

type: dict

Contains user configurable fields.


[[exported-fields-cloud]]
== Cloud Provider Metadata Fields

Metadata from cloud providers added by the add_cloud_metadata processor.



[float]
=== meta.cloud.provider

example: ec2

Name of the cloud provider. Possible values are ec2, gce, or digitalocean.


[float]
=== meta.cloud.instance_id

Instance ID of the host machine.


[float]
=== meta.cloud.machine_type

example: t2.medium

Machine type of the host machine.


[float]
=== meta.cloud.availability_zone

example: us-east-1c

Availability zone in which this host is running.


[float]
=== meta.cloud.project_id

example: project-x

Name of the project in Google Cloud.


[float]
=== meta.cloud.region

Region in which this host is running.


[[exported-fields-jmxproxybeat]]
== Jmxproxybeat Fields

Jmxproxybeat fields.



[float]
== bean Fields

Contains metrics from JMX bean.



[float]
=== bean.name

type: keyword

Name of the Bean which is retrieved.


[float]
=== bean.hostname

type: keyword

The hostname of JVM from which metrics are retrieved.


[float]
=== bean.attribute

type: keyword

The name of requested attribute.


[float]
=== bean.value

type: float

Value of the attribute.


[float]
== java/lang:type=OperatingSystem Fields

System properties about the operating system on which the Java virtual machine is running.



[float]
=== bean.java/lang:type=OperatingSystem.AvailableProcessors

type: long

Number of processors available to the Java virtual machine.


[float]
=== bean.java/lang:type=OperatingSystem.CommittedVirtualMemorySize

type: float

format: bytes



[float]
=== bean.java/lang:type=OperatingSystem.FreePhysicalMemorySize

type: float

format: bytes



[float]
=== bean.java/lang:type=OperatingSystem.FreeSwapSpaceSize

type: float

format: bytes



[float]
=== bean.java/lang:type=OperatingSystem.MaxFileDescriptorCount

type: long



[float]
=== bean.java/lang:type=OperatingSystem.ProcessCpuLoad

type: float

format: percent



[float]
=== bean.java/lang:type=OperatingSystem.ProcessCpuTime

type: long

format: duration



[float]
=== bean.java/lang:type=OperatingSystem.SystemCpuLoad

type: float

format: percent



[float]
=== bean.java/lang:type=OperatingSystem.SystemLoadAverage

type: float

format: percent



[float]
=== bean.java/lang:type=OperatingSystem.TotalPhysicalMemorySize

type: float

format: bytes



[float]
=== bean.java/lang:type=OperatingSystem.TotalSwapSpaceSize

type: float

format: bytes



[float]
== java/lang:type=ClassLoading Fields




[float]
=== bean.java/lang:type=ClassLoading.LoadedClassCount

type: long



[float]
=== bean.java/lang:type=ClassLoading.TotalLoadedClassCount

type: long



[float]
=== bean.java/lang:type=ClassLoading.UnloadedClassCount

type: long



[float]
== java/lang:type=Threading Fields




[float]
=== bean.java/lang:type=Threading.CurrentThreadCpuTime

type: float

format: duration



[float]
=== bean.java/lang:type=Threading.CurrentThreadUserTime

type: float

format: duration



[float]
=== bean.java/lang:type=Threading.DaemonThreadCount

type: long



[float]
=== bean.java/lang:type=Threading.PeakThreadCount

type: long



[float]
=== bean.java/lang:type=Threading.ThreadCount

type: long



[float]
=== bean.java/lang:type=Threading.TotalStartedThreadCount

type: long



[float]
== java/lang:type=Compilation Fields




[float]
=== bean.java/lang:type=Compilation.TotalCompilationTime

type: float

format: duration



[float]
== java/nio:type=BufferPool,name=direct Fields




[float]
=== bean.java/nio:type=BufferPool,name=direct.Count

type: float



[float]
=== bean.java/nio:type=BufferPool,name=direct.MemoryUsed

type: float

format: bytes



[float]
=== bean.java/nio:type=BufferPool,name=direct.TotalCapacity

type: float



[float]
== java/nio:type=BufferPool,name=mapped Fields




[float]
=== bean.java/nio:type=BufferPool,name=mapped.Count

type: float



[float]
=== bean.java/nio:type=BufferPool,name=mapped.MemoryUsed

type: float

format: bytes



[float]
=== bean.java/nio:type=BufferPool,name=mapped.TotalCapacity

type: float



[float]
== java/lang:type=Memory Fields




[float]
== HeapMemoryUsage Fields




[float]
=== bean.java/lang:type=Memory.HeapMemoryUsage.committed

type: float

format: bytes



[float]
=== bean.java/lang:type=Memory.HeapMemoryUsage.init

type: float

format: bytes



[float]
=== bean.java/lang:type=Memory.HeapMemoryUsage.max

type: float

format: bytes



[float]
=== bean.java/lang:type=Memory.HeapMemoryUsage.used

type: float

format: bytes



[float]
== NonHeapMemoryUsage Fields




[float]
=== bean.java/lang:type=Memory.NonHeapMemoryUsage.committed

type: float

format: bytes



[float]
=== bean.java/lang:type=Memory.NonHeapMemoryUsage.init

type: float

format: bytes



[float]
=== bean.java/lang:type=Memory.NonHeapMemoryUsage.max

type: float

format: bytes



[float]
=== bean.java/lang:type=Memory.NonHeapMemoryUsage.used

type: float

format: bytes



